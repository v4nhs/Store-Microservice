package com.store.controller;

import com.store.dto.ReserveStockRequest;
import com.store.service.InventoryService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/inventory")
@RequiredArgsConstructor
@Slf4j
public class InventoryController {

    private final InventoryService inventoryService;

    @GetMapping("/{productId}")
    public ResponseEntity<Integer> getAvailableQuantity(@PathVariable String productId) {
        log.info("üì¶ [GET] Ki·ªÉm tra s·ªë l∆∞·ª£ng t·ªìn kho cho productId: {}", productId);
        int quantity = inventoryService.getAvailableQuantity(productId);
        log.info("‚úÖ S·ªë l∆∞·ª£ng t·ªìn kho hi·ªán t·∫°i: {}", quantity);
        return ResponseEntity.ok(quantity);
    }

    @PostMapping("/{productId}/decrease")
    public ResponseEntity<Void> decreaseStock(
            @PathVariable("productId") String productId,
            @RequestParam("quantity") int quantity) {

        log.info("üì¶ [POST] Gi·∫£m s·ªë l∆∞·ª£ng t·ªìn kho cho productId: {}, quantity y√™u c·∫ßu: {}", productId, quantity);
        boolean success = inventoryService.decreaseStock(productId, quantity);

        if (success) {
            log.info("‚úÖ Gi·∫£m t·ªìn kho th√†nh c√¥ng cho productId: {}, s·ªë l∆∞·ª£ng gi·∫£m: {}", productId, quantity);
            return ResponseEntity.ok().build();
        } else {
            log.warn("‚ùå Gi·∫£m t·ªìn kho th·∫•t b·∫°i cho productId: {}, y√™u c·∫ßu gi·∫£m: {}, kh√¥ng ƒë·ªß h√†ng.", productId, quantity);
            return ResponseEntity.badRequest().build();
        }
    }
}
